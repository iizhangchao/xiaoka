<template>
  <view class='model' :class="{'active': showModel}">
    <view class='mask' @tap='hideModel'></view>
    <view class='model-body'>
      <view class='close' @tap='hideModel'></view>
      <view class='model-wrap'>
        <view class='user'>
          <image mode='widthFix' @tap='bindtapUser' src='{{userInfo.avatarUrl}}'></image>
          <view class='name'>{{userInfo.nickName}}</view>
          <view>今日完成度：{{progress}}%</view>
        </view>
        <view>
          <view @tap='goAddPage(1)' class='task-item-add'>
            <view class='icon'><image mode='widthFix' src='../images/icon-note.png'></image></view>
            <view class='title'>便签</view>
            <view class='msg'>临时接到的安排</view>
            <view class='btn'>+</view>
          </view>
          <view @tap='goAddPage(2)' class='task-item-add'>
            <view class='icon'><image mode='widthFix' src='../images/icon-plan.png'></image></view>
            <view class='title'>行程</view>
            <view class='msg'>较为长时期的计划、安排事项</view>
            <view class='btn'>+</view>
          </view>
          <view class='mode-tip'>提示：点开头像，还有各种操作哦~</view>
        </view>
      </view>
    </view>
  </view>
</template>
<script>
  import wepy from 'wepy'
  export default class AddChoose extends wepy.component {
    props = {
      showModel: {
        type: Boolean,
        twoWay: true
      },
      userInfo: Object
    }

    computed = {

    }

    onShow(){
      console.log(this.userInfo)
    }

    methods = {
      hideModel(){
        this.showModel = false
      },
      bindtapUser(){

      },
      goAddPage(type){
        wepy.navigateTo({
          url: `add?type=${type}`
        })
      }
    }


  }
</script>
<style>
  .mask,
  .model {
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 99;
    visibility: hidden;
    overflow: hidden;
    transition: all .25s ease-in-out;
  }
  .mask {
    background-color: rgba(255,255,255,.8);
  }
  .active,
  .active .mask {
    visibility: visible;
  }
  .active .model-body {
    transform:  translateY(0);
  }
  .model-body {
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 100;
    background-color: #aaa;
    transform:  translateY(120%);
    transition: all .25s ease-in-out;
  }

  .model-body:after {
    position: absolute;
    left: 50%;
    margin-left: -500rpx;
    content: '';
    top: -75rpx;
    width: 1000rpx;
    height: 300rpx;
    background-color: #fff;
    border-radius: 100%;
    box-shadow: 0 0 80rpx rgba(255,211,3,1);
    transform: rotate(-3deg);
  }
  .model-wrap {
    padding: 0 40rpx;
    position: relative;
    background: #fff;
    z-index: 10;
  }
  .user {
    margin: 0 auto;
    font-size: 28rpx;
    text-align: center;
    color: #ffcb2d;
  }
  .user .name {
    font-size: 34rpx;
    color: #000;
  }
  .user image {
    width: 120rpx;
    border-radius: 50%;
  }
  .task-item-add {
    position: relative;
    border: 1rpx solid #f4be1b;
    margin: 40rpx 60rpx;
    padding: 20rpx 40rpx 20rpx 60rpx;
    border-radius: 14rpx;
    color: #aaa;
    font-size: 28rpx;
  }
  .task-item-add .icon {
    position: absolute;
    left: -40rpx;
    width: 80rpx;
    height: 80rpx;
    background-color: #f4be1b;
    border-radius: 50%;
  }
  .task-item-add .icon image {
    width: 100%;
  }
  .task-item-add .btn {
    position: absolute;
    right: 20rpx;
    top: 25%;
    color: #000;
    font-size: 45rpx;
  }
  .task-item-add .title {
    font-size: 38rpx;
    color: #000;
  }
  .mode-tip {
    color: #aaa;
    font-size: 28rpx;
    text-align: center;
    padding-bottom: 40rpx;
  }
  .close {
    position: absolute;
    left: 30rpx;
    bottom: 30rpx;
    z-index: 11;
    width: 60rpx;
    height: 60rpx;
    text-align: center;
    line-height: 60rpx;
  }
  .close::after {
    content: "\2716";
  }
</style>